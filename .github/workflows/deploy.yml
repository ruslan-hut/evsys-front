name: Deploy to wattbrews.me

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Inject Firebase parameters into environment file
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        run: |
          sed -i "s|fb-api-key|$FIREBASE_API_KEY|g" src/environments/environment.ts
          sed -i "s|fb-auth-domain|$FIREBASE_AUTH_DOMAIN|g" src/environments/environment.ts
          sed -i "s|fb-project-id|$FIREBASE_PROJECT_ID|g" src/environments/environment.ts
          sed -i "s|fb-storage-bucket|$FIREBASE_STORAGE_BUCKET|g" src/environments/environment.ts
          sed -i "s|fb-messaging-sender-id|$FIREBASE_MESSAGING_SENDER_ID|g" src/environments/environment.ts
          sed -i "s|fb-app-id|$FIREBASE_APP_ID|g" src/environments/environment.ts
          sed -i "s|fb-measurement-id|$FIREBASE_MEASUREMENT_ID|g" src/environments/environment.ts

      - name: Build Angular project
        run: npm run build -- --prod

      - name: Archive production artifacts
        run: tar -czf angular-app.tar.gz -C dist/evsys-front .

      - name: Deploy to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          echo "$SERVER_PASSWORD" | sshpass ssh -o StrictHostKeyChecking=no $SERVER_USERNAME@$SERVER_IP "rm -rf /var/www/html/*"
          sshpass -p "$SERVER_PASSWORD" scp angular-app.tar.gz $SERVER_USERNAME@$SERVER_IP:/var/www/html/
          echo "$SERVER_PASSWORD" | sshpass ssh -o StrictHostKeyChecking=no $SERVER_USERNAME@$SERVER_IP "tar -xzf /var/www/html/angular-app.tar.gz -C /var/www/html/"

      - name: Clean up local artifacts
        run: rm angular-app.tar.gz
